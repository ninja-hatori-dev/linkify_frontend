{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\nclass ApiService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: API_BASE_URL,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Request interceptor to add auth token\n    this.api.interceptors.request.use(config => {\n      const token = localStorage.getItem('linkify_token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n\n    // Response interceptor to handle auth errors\n    this.api.interceptors.response.use(response => response, error => {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        localStorage.removeItem('linkify_token');\n        window.location.href = '/login';\n      }\n      return Promise.reject(error);\n    });\n  }\n  setAuthToken(token) {\n    if (token) {\n      this.api.defaults.headers.Authorization = `Bearer ${token}`;\n    } else {\n      delete this.api.defaults.headers.Authorization;\n    }\n  }\n\n  // Auth endpoints\n  verifyAuth() {\n    return this.api.get('/auth/verify');\n  }\n  logout() {\n    return this.api.post('/auth/logout');\n  }\n  getProfile() {\n    return this.api.get('/auth/profile');\n  }\n\n  // User endpoints\n  getDashboard() {\n    return this.api.get('/api/users/dashboard');\n  }\n  updatePreferences(preferences) {\n    return this.api.put('/api/users/preferences', {\n      preferences\n    });\n  }\n  getActivity(params = {}) {\n    return this.api.get('/api/users/activity', {\n      params\n    });\n  }\n\n  // Company endpoints\n  getCompanies() {\n    return this.api.get('/api/companies');\n  }\n\n  // Get user's account company (for analysis)\n  getAccountCompany() {\n    return this.api.get('/api/companies/account');\n  }\n\n  // Get prospect companies only\n  getProspectCompanies() {\n    return this.api.get('/api/companies/prospects');\n  }\n  getCompany(domain) {\n    return this.api.get(`/api/companies/${domain}`);\n  }\n  saveCompanyFromLinkedIn(data) {\n    return this.api.post('/api/companies/from-linkedin', data);\n  }\n  updateCompanyNotes(domain, notes) {\n    return this.api.put(`/api/companies/${domain}/notes`, {\n      notes\n    });\n  }\n  deleteCompany(domain) {\n    return this.api.delete(`/api/companies/${domain}`);\n  }\n  getCompanyProspects(domain, params = {}) {\n    return this.api.get(`/api/companies/${domain}/prospects`, {\n      params\n    });\n  }\n\n  // Prospect endpoints\n  getProspects(params = {}) {\n    return this.api.get('/api/prospects', {\n      params\n    });\n  }\n  getProspectByUrl(linkedinUrl) {\n    return this.api.get('/api/prospects/by-url', {\n      params: {\n        linkedin_url: linkedinUrl\n      }\n    });\n  }\n  saveProspectFromLinkedIn(data) {\n    return this.api.post('/api/prospects/from-linkedin', data);\n  }\n  updateProspect(id, data) {\n    return this.api.put(`/api/prospects/${id}`, data);\n  }\n  deleteProspect(id) {\n    return this.api.delete(`/api/prospects/${id}`);\n  }\n  getProspectStats() {\n    return this.api.get('/api/prospects/stats');\n  }\n\n  // Analysis endpoints\n  analyzeCompanyInfo(domain) {\n    return this.api.post('/api/analysis/company-info', {\n      domain\n    });\n  }\n  analyzeCompanyPersonas(domain, companyData = null) {\n    return this.api.post('/api/analysis/company-personas', {\n      domain,\n      companyData\n    });\n  }\n  scoreProspect(linkedinUrl, profileData, companyDomain) {\n    return this.api.post('/api/analysis/prospect-score', {\n      linkedinUrl,\n      profileData,\n      companyDomain\n    });\n  }\n\n  // New endpoints for the simplified app\n  analyzeCompanyPersonasNew(linkedinUrl, accountDomain) {\n    return this.api.post('/api/analysis/company-personas', {\n      linkedin_url: linkedinUrl,\n      accountDomain: accountDomain\n    });\n  }\n  analyzeCompanyData(linkedinUrl, accountDomain, domData) {\n    return this.api.post('/api/analysis/comp_analysis', {\n      linkedin_url: linkedinUrl,\n      accountDomain: accountDomain,\n      domData: domData\n    });\n  }\n  analyzePeopleData(linkedinUrl, accountDomain, peopledata) {\n    return this.api.post('/api/analysis/people_analysis', {\n      linkedinUrl: linkedinUrl,\n      accountDomain: accountDomain,\n      data: peopledata\n    });\n  }\n\n  // Generic helper methods\n  async handleApiCall(apiCall, errorMessage = 'API call failed') {\n    try {\n      const response = await apiCall();\n      return {\n        data: response.data,\n        error: null\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(errorMessage, error);\n      return {\n        data: null,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message || errorMessage\n      };\n    }\n  }\n}\nexport const apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","setAuthToken","defaults","verifyAuth","get","logout","post","getProfile","getDashboard","updatePreferences","preferences","put","getActivity","params","getCompanies","getAccountCompany","getProspectCompanies","getCompany","domain","saveCompanyFromLinkedIn","data","updateCompanyNotes","notes","deleteCompany","delete","getCompanyProspects","getProspects","getProspectByUrl","linkedinUrl","linkedin_url","saveProspectFromLinkedIn","updateProspect","id","deleteProspect","getProspectStats","analyzeCompanyInfo","analyzeCompanyPersonas","companyData","scoreProspect","profileData","companyDomain","analyzeCompanyPersonasNew","accountDomain","analyzeCompanyData","domData","analyzePeopleData","peopledata","handleApiCall","apiCall","errorMessage","_error$response2","_error$response2$data","console","message","apiService"],"sources":["/Users/sorcerer/linkify/linkify-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\nclass ApiService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: API_BASE_URL,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    // Request interceptor to add auth token\n    this.api.interceptors.request.use(\n      (config) => {\n        const token = localStorage.getItem('linkify_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => {\n        return Promise.reject(error);\n      }\n    );\n\n    // Response interceptor to handle auth errors\n    this.api.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          localStorage.removeItem('linkify_token');\n          window.location.href = '/login';\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  setAuthToken(token) {\n    if (token) {\n      this.api.defaults.headers.Authorization = `Bearer ${token}`;\n    } else {\n      delete this.api.defaults.headers.Authorization;\n    }\n  }\n\n  // Auth endpoints\n  verifyAuth() {\n    return this.api.get('/auth/verify');\n  }\n\n  logout() {\n    return this.api.post('/auth/logout');\n  }\n\n  getProfile() {\n    return this.api.get('/auth/profile');\n  }\n\n  // User endpoints\n  getDashboard() {\n    return this.api.get('/api/users/dashboard');\n  }\n\n  updatePreferences(preferences) {\n    return this.api.put('/api/users/preferences', { preferences });\n  }\n\n  getActivity(params = {}) {\n    return this.api.get('/api/users/activity', { params });\n  }\n\n  // Company endpoints\n  getCompanies() {\n    return this.api.get('/api/companies');\n  }\n\n  // Get user's account company (for analysis)\n  getAccountCompany() {\n    return this.api.get('/api/companies/account');\n  }\n\n  // Get prospect companies only\n  getProspectCompanies() {\n    return this.api.get('/api/companies/prospects');\n  }\n\n  getCompany(domain) {\n    return this.api.get(`/api/companies/${domain}`);\n  }\n\n  saveCompanyFromLinkedIn(data) {\n    return this.api.post('/api/companies/from-linkedin', data);\n  }\n\n  updateCompanyNotes(domain, notes) {\n    return this.api.put(`/api/companies/${domain}/notes`, { notes });\n  }\n\n  deleteCompany(domain) {\n    return this.api.delete(`/api/companies/${domain}`);\n  }\n\n  getCompanyProspects(domain, params = {}) {\n    return this.api.get(`/api/companies/${domain}/prospects`, { params });\n  }\n\n  // Prospect endpoints\n  getProspects(params = {}) {\n    return this.api.get('/api/prospects', { params });\n  }\n\n  getProspectByUrl(linkedinUrl) {\n    return this.api.get('/api/prospects/by-url', { \n      params: { linkedin_url: linkedinUrl } \n    });\n  }\n\n  saveProspectFromLinkedIn(data) {\n    return this.api.post('/api/prospects/from-linkedin', data);\n  }\n\n  updateProspect(id, data) {\n    return this.api.put(`/api/prospects/${id}`, data);\n  }\n\n  deleteProspect(id) {\n    return this.api.delete(`/api/prospects/${id}`);\n  }\n\n  getProspectStats() {\n    return this.api.get('/api/prospects/stats');\n  }\n\n  // Analysis endpoints\n  analyzeCompanyInfo(domain) {\n    return this.api.post('/api/analysis/company-info', { domain });\n  }\n\n  analyzeCompanyPersonas(domain, companyData = null) {\n    return this.api.post('/api/analysis/company-personas', { \n      domain, \n      companyData \n    });\n  }\n\n  scoreProspect(linkedinUrl, profileData, companyDomain) {\n    return this.api.post('/api/analysis/prospect-score', {\n      linkedinUrl,\n      profileData,\n      companyDomain\n    });\n  }\n\n  // New endpoints for the simplified app\n  analyzeCompanyPersonasNew(linkedinUrl, accountDomain) {\n    return this.api.post('/api/analysis/company-personas', {\n      linkedin_url: linkedinUrl,\n      accountDomain: accountDomain\n    });\n  }\n\n  analyzeCompanyData(linkedinUrl, accountDomain,domData) {\n    return this.api.post('/api/analysis/comp_analysis', {\n      linkedin_url: linkedinUrl,\n      accountDomain: accountDomain,\n      domData: domData\n    });\n  }\n\n\n\n\n\n  analyzePeopleData(linkedinUrl,accountDomain,peopledata) {\n    return this.api.post('/api/analysis/people_analysis', {\n      linkedinUrl: linkedinUrl,\n      accountDomain: accountDomain,\n      data: peopledata\n    });\n  }\n\n  // Generic helper methods\n  async handleApiCall(apiCall, errorMessage = 'API call failed') {\n    try {\n      const response = await apiCall();\n      return { data: response.data, error: null };\n    } catch (error) {\n      console.error(errorMessage, error);\n      return { \n        data: null, \n        error: error.response?.data?.error || error.message || errorMessage \n      };\n    }\n  }\n}\n\nexport const apiService = new ApiService();\nexport default apiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}