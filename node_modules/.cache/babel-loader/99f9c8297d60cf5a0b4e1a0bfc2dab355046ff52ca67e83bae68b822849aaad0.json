{"ast":null,"code":"var _jsxFileName = \"/Users/sorcerer/linkify/linkify-frontend/src/pages/People.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { User, Target, TrendingUp, MessageCircle, Lightbulb, Star, MapPin, GraduationCap, Briefcase } from 'lucide-react';\nimport { apiService } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst People = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n\n  // Listen for profile data from the Chrome extension side panel\n  useEffect(() => {\n    const handleWindowMessage = async event => {\n      const payload = event.data;\n      if ((payload === null || payload === void 0 ? void 0 : payload.type) === 'LINKIFY_PROFILE_DATA' && payload !== null && payload !== void 0 && payload.data) {\n        setLoading(true);\n        try {\n          const peopledata = {\n            profile: payload.data\n          };\n          console.log('peopledata', peopledata);\n          const response = await apiService.analyzePeopleData(payload.data.linkedinUrl, accountDomain, peopledata);\n          setAnalysis(response.data);\n          toast.success('Profile analyzed successfully');\n        } catch (error) {\n          console.error('Profile analysis error:', error);\n          toast.error('Failed to analyze profile');\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n    window.addEventListener('message', handleWindowMessage);\n    return () => window.removeEventListener('message', handleWindowMessage);\n  }, []);\n  const getPersonaTypeColor = type => {\n    const colors = {\n      decision_maker: 'bg-red-100 text-red-800',\n      sponsor: 'bg-blue-100 text-blue-800',\n      influencer: 'bg-yellow-100 text-yellow-800',\n      champion: 'bg-green-100 text-green-800'\n    };\n    return colors[type] || 'bg-gray-100 text-gray-800';\n  };\n  const getScoreColor = (score, maxScore) => {\n    const percentage = score / maxScore * 100;\n    if (percentage >= 80) return 'text-green-600';\n    if (percentage >= 60) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto space-y-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-sm p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(User, {\n          className: \"h-8 w-8 text-blue-600 mr-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-900\",\n          children: \"People Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(People, \"NNVBkRwLstpBf+9Sa3Gyrw7aaFQ=\");\n_c = People;\nexport default People;\nvar _c;\n$RefreshReg$(_c, \"People\");","map":{"version":3,"names":["React","useState","useEffect","User","Target","TrendingUp","MessageCircle","Lightbulb","Star","MapPin","GraduationCap","Briefcase","apiService","toast","jsxDEV","_jsxDEV","People","_s","loading","setLoading","analysis","setAnalysis","handleWindowMessage","event","payload","data","type","peopledata","profile","console","log","response","analyzePeopleData","linkedinUrl","accountDomain","success","error","window","addEventListener","removeEventListener","getPersonaTypeColor","colors","decision_maker","sponsor","influencer","champion","getScoreColor","score","maxScore","percentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sorcerer/linkify/linkify-frontend/src/pages/People.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { User, Target, TrendingUp, MessageCircle, Lightbulb, Star, MapPin, GraduationCap, Briefcase } from 'lucide-react';\nimport { apiService } from '../services/api';\nimport toast from 'react-hot-toast';\n\nconst People = () => {\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n\n\n  // Listen for profile data from the Chrome extension side panel\n  useEffect(() => {\n    const handleWindowMessage = async (event) => {\n      const payload = event.data;\n      if (payload?.type === 'LINKIFY_PROFILE_DATA' && payload?.data) {\n        setLoading(true);\n        try {\n          const peopledata = { profile: payload.data };\n\n          console.log('peopledata', peopledata);\n\n\n          const response = await apiService.analyzePeopleData(payload.data.linkedinUrl,accountDomain,peopledata);\n          setAnalysis(response.data);\n          toast.success('Profile analyzed successfully');\n        } catch (error) {\n          console.error('Profile analysis error:', error);\n          toast.error('Failed to analyze profile');\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n\n    window.addEventListener('message', handleWindowMessage);\n    return () => window.removeEventListener('message', handleWindowMessage);\n  }, []);\n\n  \n\n  const getPersonaTypeColor = (type) => {\n    const colors = {\n      decision_maker: 'bg-red-100 text-red-800',\n      sponsor: 'bg-blue-100 text-blue-800',\n      influencer: 'bg-yellow-100 text-yellow-800',\n      champion: 'bg-green-100 text-green-800'\n    };\n    return colors[type] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getScoreColor = (score, maxScore) => {\n    const percentage = (score / maxScore) * 100;\n    if (percentage >= 80) return 'text-green-600';\n    if (percentage >= 60) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto space-y-6\">\n      {/* Header */}\n      <div className=\"bg-white rounded-lg shadow-sm p-6\">\n        <div className=\"flex items-center mb-4\">\n          <User className=\"h-8 w-8 text-blue-600 mr-3\" />\n          <h1 className=\"text-2xl font-bold text-gray-900\">People Analysis</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default People;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}